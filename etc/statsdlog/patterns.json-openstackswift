{
"error.proxy.timeout.account": ".*proxy-server.*ERROR with Account server.*Timeout.*",
"error.proxy.timeout.container": ".*proxy-server.*ERROR with Container server.*Timeout.*",
"error.proxy.timeout.object": ".*proxy-server.*ERROR with Object server.*Timeout.*", 
"error.proxy.code.400": ".*proxy-server.*code 400.*", 
"error.proxy.memcache": ".*Timeout talking to memcached.*\\\\|.*Error connecting to memcached.*", 
"error.proxy.ioerror.eof_chunked_data": ".*proxy-server.*IOError: unexpected end of file while parsing chunked data.*",
"notice.restart": ".*SIGTERM received.*",
"error.account.locktimeout": ".*account-server.*ERROR __call__ error with.*LockTimeout.*",
"error.account.OperationalError": ".*account-server.*OperationalError: unable to open database file.*",
"error.container.locktimeout": ".*container-server.*ERROR __call__ error with.*LockTimeout.*",
"error.container.OperationalError": ".*container-server.*OperationalError: unable to open database file.*",
"error.object.locktimeout": ".*object-server.*ERROR __call__ error with.*LockTimeout.*",
"error.object.OSError": ".*object-server.*OSError:.*",
"error.object_replicator.maxconnections": ".*object-replicator @ERROR: max connections.*",
"error.object_replicator.timeout": ".*object-replicator Error syncing with node:.*imeout.*",
"error.container_replicator.timeout": ".*container-replicator.*imeout.*",
"error.account_replicator.timeout": ".*account-replicator.*imeout.*",
"error.object_updater.timeout": ".*object-updater.*ERROR.*Timeout.*",
"error.container_updater.timeout": ".*container-updater.*ERROR.*Timeout.*",
"error.account_updater.timeout": ".*account-updater.*ERROR.*Timeout.*",
"error.object_updater.locktimeout": ".*object-updater.*UNCAUGHT.*LockTimeout",
"error.container_updater.locktimeout": ".*container-updater.*UNCAUGHT.*LockTimeout",
"error.account_updater.locktimeout": ".*account-updater.*UNCAUGHT.*LockTimeout",
"warning.proxy.handoff_one": ".*Handoff requested \\(1\\).*",
"warning.proxy.handoff_two": ".*Handoff requested \\(2\\).*",
"warning.proxy.handoff_three": ".*Handoff requested \\(3\\).*"
}
